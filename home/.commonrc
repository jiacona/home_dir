# Set the PATH
export PATH=./bin:/usr/local/bin:/usr/local/sbin:/opt/local/bin:/opt/local/sbin:/usr/bin:/usr/sbin:/bin:/sbin;

# Set the default editor (Git amongst others use this)
export EDITOR=vim;

# Used by helper scripts (e.g. workon)
export SOURCE_DIRECTORY=$HOME/src;

# Used by "virtualenv"
export VIRTUALENVS_DIRECTORY=$HOME/.virtualenvs;
export VIRTUAL_ENV_DISABLE_PROMPT=1;

# Ensure that "LANG" is set
if [ -z "$LANG" ]; then
  export LANG=en_US.UTF-8;
fi

# Ensure that "TERM" is [properly] set
if [ -z "$TERM" ] || [[ $TERM =~ 'screen|xterm' ]]; then
  if [ -n "$TMUX_PANE" ]; then
    export TERM=screen-256color;
  else
    export TERM=xterm-256color;
  fi
fi

# If it exists, process ".cygwinrc"
CYGWINRC_FILE=$HOME/.cygwinrc;
if [ -f $CYGWINRC_FILE ]; then
  source $CYGWINRC_FILE;
fi

# If it exists, process ".darwinrc"
DARWINRC_FILE=$HOME/.darwinrc;
if [ -f $DARWINRC_FILE ]; then
  source $DARWINRC_FILE;
fi

# If it exists, process ".linuxrc"
LINUXRC_FILE=$HOME/.linuxrc;
if [ -f $LINUXRC_FILE ]; then
  source $LINUXRC_FILE;
fi

# If it exists, process ".common_aliases"
COMMON_ALIASES_FILE=$HOME/.common_aliases;
if [ -f $COMMON_ALIASES_FILE ]; then
  source $COMMON_ALIASES_FILE;
fi

# If it exists, process ".common_functions"
COMMON_FUNCTIONS_FILE=$HOME/.common_functions;
if [ -f $COMMON_FUNCTIONS_FILE ]; then
  source $COMMON_FUNCTIONS_FILE;
fi

# Conditionally set up "ssh-askpass" (this must be done before processing ".sshagentrc")
if [ -z "$SSH_CONNECTION" ] && [ -z "$SSH_ASKPASS" ] && [ -z `sh -c "which ssh-askpass 2> /dev/null"` ]; then
  export SSH_ASKPASS=$HOME/libexec/ssh-askpass;
fi

# If it exists, process ".sshagentrc"
SSHAGENTRC_FILE=$HOME/.sshagentrc;
if [ -f $SSHAGENTRC_FILE ]; then
  source $SSHAGENTRC_FILE;
fi

# If it exists, process ".autocutselrc"
AUTOCUTSELRC_FILE=$HOME/.autocutselrc;
if [ -f $AUTOCUTSELRC_FILE ]; then
  source $AUTOCUTSELRC_FILE;
fi

# If it exists, process ".rubyrc"
RUBYRC_FILE=$HOME/.rubyrc;
if [ -f $RUBYRC_FILE ]; then
  source $RUBYRC_FILE;
fi

# Load any custom init-scripts (the filename *must* end-with "rc")
CUSTOM_INIT_SCRIPTS_DIRECTORY=$HOME/.home_dir/custom;
if [ -d $CUSTOM_INIT_SCRIPTS_DIRECTORY ]; then
  for f in `find "$CUSTOM_INIT_SCRIPTS_DIRECTORY" -type f -o -type l | \grep "rc$"`; do
    source $f;
  done
fi

# If it exists, load RVM (it *must* be initialized last)
RVM_SCRIPT=$HOME/.rvm/scripts/rvm;
if [ -f $RVM_SCRIPT ]; then
  source $RVM_SCRIPT;
fi
