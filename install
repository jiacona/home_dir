#!/usr/bin/env bash

# ensure that all submodules are initialized and up to date
git submodule init && git submodule update;

# find files, directories and symbolic-links
for d in home overrides; do
  for o in $(find $d -type d -o -type f -o -type l | \grep -E "^$d/(.+)" | sed "s/$d\///g"); do
    # calculate the source/destination values
    source_object=$d/$o;
    destination_object=$HOME/$o;
    # if it's a directory and it does not exist
    if [ -d $source_object ] && [ ! -d $destination_object ]; then
      mkdir -p $destination_object;
    # if it's a file and it does not exist or it is different
    elif [ -f $source_object ] && ([ ! -f $destination_object ] || ! cmp $source_object $destination_object > /dev/null 2>&1); then
      cp -ai $source_object $destination_object;
    fi
  done
done

# reload the shell-config (it may have changed)
source $HOME/.bashrc;

# run scripts optionally w/ any abitrary prefix (e.g. "sudo")
function run_scripts() {
  for f in $(find $1 -type f | \grep -E "^$1/[^\.](.+)" | sed "s/$1\///g"); do
    $2 $1/$f;
  done
}

# run any files in "sudo_scripts" then in "scripts" (assumes things requiring root should occur first)
[[ `which sudo 2> /dev/null` ]] && run_scripts 'sudo_script' 'sudo -E'
run_scripts 'script'
